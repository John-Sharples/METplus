[dir]
## Input data directories
## This is the location of your input files for METplus

PROJ_DIR = /d1/minnawin/skunk
TMP_DIR = /d1/minnawin/skunk/tmp
OUTPUT_BASE = /d1/minnawin/skunk
METPLUS_BASE = /home/minnawin/wip/METplus
MET_BUILD_BASE = /usr/local/met-6.1
MET_INSTALL_DIR = /usr/local/met-6.1
PARM_BASE = /home/minnawin/wip/METplus/parm

## Used with OUTPUT_BASE to create the output directory from PB2NC
PREPBUFR_DATA_DIR = /d1/METplus_Mallory/data/prepbufr

# this is the name of model (and subdir to PREPBUFR_DATA_DIR)
# ex: nam for NAM or gdas for GDAS dir
PREPBUFR_MODEL_DIR_NAME = nam
PB2NC_OUTPUT_DIR = {OUTPUT_BASE}/{PREPBUFR_MODEL_DIR_NAME}/conus_sfc


[config]
# Logging levels: DEBUG, INFO, WARN, ERROR (most verbose is DEBUG)
LOG_LEVEL = DEBUG

#
## Configuration-related settings such as the process list, begin and end times, etc.
PROCESS_LIST = PB2NC
## Param file used by MET
PB2NC_CONFIG_FILE = {PARM_BASE}/met_config/PB2NCConfig_conus_sfc
#PB2NC_CONFIG_FILE = {PARM_BASE}/met_config/PB2NC_SFC_Mallory

# Either conus_sfc or upper_air
VERTICAL_LOCATION = conus_sfc

# These are appended with PB2NC to differentiate the GRID, POLY, and MESSAGE_TYPE for point_stat.
PB2NC_GRID =
PB2NC_POLY =
PB2NC_STATION_ID =
PB2NC_MESSAGE_TYPE =

# Leave empty to process all
OBS_BUFR_VAR_LIST = PMO, TOB, TDO, UOB, VOB, PWO, TOCC

# Time method by which to perform validation, either by init time or by valid
# time.
# Indicate which method, by init or by valid time
TIME_METHOD = BY_VALID

# For processing by init time or valid time, indicate the start and end hours
# in HH format
START_HOUR = 00
END_HOUR = 23

# Indicate the begin and end date, and interval (in hours)
BEG_TIME = 20170601
END_TIME = 20170630
INTERVAL_TIME = 24

# start and end dates are created by combining the date with
# start and end hours (format can be hh, hhmm, or hhmmss.
START_DATE = {BEG_TIME}{START_HOUR}
END_DATE = {END_TIME}{END_HOUR}

# For both pb2nc and point_stat, the obs_window dictionary:
OBS_WINDOW_BEG = -2700
OBS_WINDOW_END = 2700

#***********
# ***NOTE***
#***********
# SET TIME_SUMMARY_FLAG to False. There is a bug in met-6.1.
## For defining the time periods for summarization
# False for no time summary, True otherwise
TIME_SUMMARY_FLAG = False
TIME_SUMMARY_BEG = 000000  ;; start time of time summary in HHMMSS format
TIME_SUMMARY_END = 235959  ;; end time of time summary in HHMMSS format
TIME_SUMMARY_VAR_NAMES = PMO,TOB,TDO,UOB,VOB,PWO,TOCC
TIME_SUMMARY_TYPES = min, max, range, mean, stdev, median, p80  ;; a list of the statistics to summarize

## OVERWRITE OPTIONS
## Don't overwrite files if they already exist.
## Set to no if you do NOT want to override existing files
## Set to yes if you do want to override existing files
OVERWRITE_NC_OUTPUT = yes

#
##  FILENAME TEMPLATES
#
[filename_templates]
## Output file template
# For NAM
NC_FILE_TMPL = prepbufr.nam.{init?fmt=%Y%m%d}.t{cycle?fmt=%HH}z.tm{offset?fmt=%HH}.nc

#
## REGEX PATTERN
#
[regex_pattern]
## Define prepBUFR input directory and filename patterns, place parenthesis
## around any YMD, cycle time, and offset (fhr)
NAM_PREPBUFR_DIR_REGEX = .*nam.(2[0-9]{7})
NAM_PREPBUFR_FILE_REGEX = .*nam.t([0-9]{2})z.prepbufr.tm([0-9]{2})

PREPBUFR_DIR_REGEX = .*nam.(2[0-9]{7})
PREPBUFR_FILE_REGEX = .*nam.t([0-9]{2})z.prepbufr.tm([0-9]{2})
# or substitute via pre-defined KEY
#PREPBUFR_FILE_REGEX = {NAM_PREPBUFR_FILE_REGEX}


