#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip bigskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Software Installation/Getting Started
\begin_inset CommandInset label
LatexCommand label
name "chap:Software-Installation/Getting-St"

\end_inset


\end_layout

\begin_layout Section
Introduction
\begin_inset CommandInset label
LatexCommand label
name "sec:Install_Introduction"

\end_inset


\end_layout

\begin_layout Standard

\series medium
This chapter describes how to download and set up METplus.
 METplus has been developed and tested on the Debian Linux operating system.
 
\end_layout

\begin_layout Section
Supported architectures
\begin_inset CommandInset label
LatexCommand label
name "sec:Install_Supported-architectures"

\end_inset


\end_layout

\begin_layout Standard

\series medium
METplus was developed on Debian Linux and is supported on this platform.
\end_layout

\begin_layout Section
Programming/scripting languages
\begin_inset CommandInset label
LatexCommand label
name "sec:Programming-/-scripting-languages"

\end_inset


\end_layout

\begin_layout Standard

\series medium
METplus is written in Python 2.7.
 METplus is intended to be a tool for the modeling community to use and
 adapt.
 As users make upgrades and improvements to the tools, they are encouraged
 to offer those upgrades to the broader community by offering feedback to
 the developers or coordinating for a GitHub pull.
 For more information on contributing code to METplus, please contact 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

met_help@ucar.edu
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Pre-requisites 
\begin_inset CommandInset label
LatexCommand label
name "sec:Pre-requisites"

\end_inset


\end_layout

\begin_layout Standard
The following software is required to run METplus:
\end_layout

\begin_layout Itemize
Python 2.7 
\end_layout

\begin_layout Itemize
R version 3.2.5
\series medium
 
\begin_inset Foot
status open

\begin_layout Plain Layout

\series medium
R version 3.2.5 is required when the tcmpr_plotter_wrapper.py wraps the plot_tcmpr.R
 script.
 Please refer to Chapter 21 Plotting and Graphics Support for more information
 about plot_tcmpr.R.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
nco (netCDF operators)
\end_layout

\begin_layout Itemize
MET version 6.1 or above
\end_layout

\begin_layout Itemize
Basic familiarity with MET
\end_layout

\begin_layout Itemize
GitHub account (if you plan on contributing code to METplus)
\end_layout

\begin_layout Section
METplus directory structure 
\begin_inset CommandInset label
LatexCommand label
name "sec:METplus-directory-structure"

\end_inset


\end_layout

\begin_layout Standard

\series medium
Once you have cloned the METplus from the GitHub repository at https://github.com
/NCAR/METplus to a location on your host, change directories to the METplus
 directory.
 You should have the following directory structure:
\end_layout

\begin_layout LyX-Code

\series medium
METplus
\series default

\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout LyX-Code

\series medium
doc
\end_layout

\begin_layout LyX-Code
internal_tests
\end_layout

\begin_layout LyX-Code
parm
\end_layout

\begin_layout LyX-Code
sorc
\end_layout

\begin_layout LyX-Code
ush
\end_layout

\begin_layout LyX-Code
README.md
\end_layout

\end_deeper
\begin_layout Standard

\series medium
The top-level METplus directory consists of a README.md file and several
 subdirectories.
 
\end_layout

\begin_layout Standard

\series medium
The doc/ directory contains documentation for users (PDF) and Doxygen files
 that are used to create the developer documentaton.
 The Doxygen documentation can be created and viewed via web browser if
 the developer has Doxygen installed on the host.
\end_layout

\begin_layout Standard

\series medium
The internal_tests/ directory contains unit test scripts that are only relevant
 to METplus developers and contributors.
\end_layout

\begin_layout Standard
The parm/ directory contains all the configuration files for MET and METplus.
\end_layout

\begin_layout Standard
The sorc/ directory contains Doxygen executables to generate documentation
 for developers.
\end_layout

\begin_layout Standard

\series medium
The src/ directory contains the source code for each of the wrappers in
 METplus.
 
\end_layout

\begin_layout Standard

\series medium
The ush/ directory contains the Python wrappers to the MET tools.
 
\end_layout

\begin_layout Section
Getting the METplus source code
\begin_inset CommandInset label
LatexCommand label
name "sec:Getting-the-METplus-source-code"

\end_inset


\end_layout

\begin_layout Standard
The METplus source code is available for download from a public GitHub repositor
y.
 You can retrieve the source code through your web browser or the command
 line.
\end_layout

\begin_layout Subsection
Get the source code via your Web Browser
\begin_inset CommandInset label
LatexCommand label
name "subsec:Get-the-source-code-via-your-Web-Browser"

\end_inset


\end_layout

\begin_layout Subsubsection
Source code only:
\end_layout

\begin_layout Standard
If you wish to retrieve only the source code, then the following steps will
 illustrate how to quickly access the METplus source code and relevant documenta
tion:
\end_layout

\begin_layout Itemize
On your local host (or wherever you wish to install the METplus code) create
 a directory where you want the code to reside
\end_layout

\begin_layout Itemize
Open the browser of your choice and navigate to https://github.com/NCAR/METplus.
 You will see something like the following:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename metplus_repo.png
	lyxscale 70
	scale 70
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Itemize
You should be directed to the 'master' branch, verify this by looking at
 the button labelled 'Branch' in the upper left corner of your window, directly
 beneath the solid blue horizontal line.
\end_layout

\begin_layout Itemize
Click on the green 
\begin_inset Quotes eld
\end_inset

Clone or download
\begin_inset Quotes erd
\end_inset

 button near the top right of the page.
\end_layout

\begin_layout Itemize
A box appears with 
\begin_inset Quotes eld
\end_inset

Clone with HTTPS
\begin_inset Quotes erd
\end_inset

 label
\end_layout

\begin_layout Itemize
Click on the blue text: 
\begin_inset Quotes eld
\end_inset

Download Zip
\begin_inset Quotes erd
\end_inset

 :
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename download_metplus.png
	lyxscale 70
	scale 70

\end_inset


\end_layout

\begin_layout Itemize
Your browser should prompt you on what to do with this file.
 Save it to the directory you created above
\end_layout

\begin_layout Itemize
cd to the directory where you saved the code.
 You should see the file METplus-master.zip
\end_layout

\begin_layout Itemize
Uncompress the file:
\end_layout

\begin_deeper
\begin_layout Itemize
Linux/Unix:
\end_layout

\begin_layout Itemize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
unzip METplus-master.zip
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
You should now have a METplus-master directory
\end_layout

\begin_deeper
\begin_layout Itemize
If you downloaded the code via the command line, you will get a METplus
 directory rather than METplus-master.
 
\end_layout

\begin_layout Itemize
GitHub appends the '-master' to the name to emphasize that is is from the
 master branch
\end_layout

\begin_layout Itemize
To avoid clutter and confusion, you can now remove the METplus-master.zip
 (optional)
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsubsection
Source code, additional documentation, and sample data
\end_layout

\begin_layout Standard
If you are a new METplus user and would like to experiment with the use
 cases, you will want to follow these instructions to retrieve the source
 code, additional documentation and sample data that accompanies the use
 cases:
\end_layout

\begin_layout Itemize
On your local host (or wherever you wish to install the METplus code) create
 a directory where you want the code to reside
\end_layout

\begin_layout Itemize
Open the browser of your choice and navigate to https://github.com/NCAR/METplus.
 You will see something like the following:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename metplus_repo.png
	lyxscale 70
	scale 70
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Itemize
Click on the 'releases' link, highlighted by a red circle in the diagram
 below:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename metplus_repo_release.png
	lyxscale 50
	scale 50
	clip

\end_inset


\end_layout

\begin_layout Itemize
You will be redirected to another screen.
 The latest available release appears at the top of the screen:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename metplus_repo_releases_page.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\begin_layout Itemize
Click on the 'Source code' link (either the 
\shape italic
zip
\shape default
 or 
\shape italic
tar.gz
\shape default
) and when prompted, save it to the directory you created.
\end_layout

\begin_layout Itemize
Uncompress the source code (on Linux/Unix
\shape italic
: gunzip
\shape default
 for zip file or 
\shape italic
tar xvfz
\shape default
 for the tar.gz file)
\end_layout

\begin_layout Itemize
Create a directory for the sample data directory
\end_layout

\begin_layout Itemize
Click on the 
\shape italic
sample_data.tar.gz 
\shape default
link and when prompted, save the file to the directory you created above
\end_layout

\begin_layout Subsection
Get the source code via Command line 
\begin_inset CommandInset label
LatexCommand label
name "subsec:Get-the-source-via-Command-line"

\end_inset


\end_layout

\begin_layout Itemize
On your local host (or wherever you wish to install the METplus code) create
 a directory where you want the code to reside
\end_layout

\begin_layout Itemize
cd to the directory you just created.
\end_layout

\begin_layout Itemize
On the command line, enter the following:
\end_layout

\begin_deeper
\begin_layout Itemize

\shape italic
git clone https://github.com/NCAR/METplus
\end_layout

\begin_layout Itemize
The source code should appear under the METplus directory
\end_layout

\end_deeper
\begin_layout Itemize
To update your copy, cd to your METplus install directory: /
\shape italic
path
\shape default
/
\shape italic
to
\shape default
/METplus and enter 
\shape italic
git pull
\shape default
 at the command line
\end_layout

\begin_layout Section
Set up your environment 
\begin_inset CommandInset label
LatexCommand label
name "sec:Set-up-your-environment"

\end_inset


\end_layout

\begin_layout Standard
Environment variables need to be set to allow the METplus application to
 be run from any directory and for locating the necessary Python modules.
 There is an option to set the JLOGFILE environment variable, which indicates
 where JLOGS will be saved.
 JLOGS provide information pertinent to the configuration-file framework.
 If this environment is unset, then output from the configuration framework
 will be directed to stdout (your display).
\end_layout

\begin_layout Standard
Add the following information to your .cshrc (C shell) or .bashrc (Bash shell):
\end_layout

\begin_layout Paragraph
.cshrc:
\end_layout

\begin_layout Itemize
Open your .cshrc file and do the following:
\end_layout

\begin_layout Itemize
To your PATH, add: 
\shape italic
full-path-to
\shape default
-
\shape italic
METplus
\shape default
/ush
\end_layout

\begin_layout Itemize
Optional: add JLOGFILE variable and set to 
\shape italic
full-path-to-save-jlog-files
\end_layout

\begin_layout Itemize
Close your .cshrc file and run 
\family typewriter
source ~/.cshrc
\end_layout

\begin_layout Itemize

\shape italic
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\shape italic
e.g.
\end_layout

\begin_layout Plain Layout
set path = (other_path_entries ~/METplus/ush
\end_layout

\begin_layout Plain Layout
# optional
\end_layout

\begin_layout Plain Layout
setenv JLOGFILE ~/jlog_out
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
.bashrc:
\end_layout

\begin_layout Itemize
Open your .bashrc file and do the following:
\end_layout

\begin_layout Itemize
To your PATH, add : 
\shape italic
full-path-to-METplus
\shape default
/ush
\end_layout

\begin_layout Itemize
Optional: add a JLOGFILE environment variable and set it to the directory
 where you want the logs to reside
\end_layout

\begin_layout Itemize
Close your .bashrc file and run 
\family typewriter
source ~/.bashrc
\end_layout

\begin_layout Itemize
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\shape italic
e.g.
\end_layout

\begin_layout Plain Layout
export PATH=~/METplus/ush:$PATH
\end_layout

\begin_layout Plain Layout
#optional
\end_layout

\begin_layout Plain Layout
export JLOGFILE=~/
\end_layout

\end_inset


\end_layout

\begin_layout Section
Set up METplus Configuration files
\end_layout

\begin_layout Standard
There are four METplus configuration files that must be defined prior to
 running METplus.
 These configuration files reside in the METplus_INSTALL_DIRECTORY/METplus/parm/
metplus_config
\end_layout

\begin_layout Standard
The following configuration files are automatically loaded during a METplus
 run and do not need to be invoked on the command line.
 
\end_layout

\begin_layout Itemize
metplus_data.conf
\end_layout

\begin_deeper
\begin_layout Itemize
data-relevant settings:
\end_layout

\begin_deeper
\begin_layout Itemize
filename templates
\end_layout

\begin_layout Itemize
regular expressions for input or output filenames
\end_layout

\begin_layout Itemize
directories where input data are located
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
metplus_logging.conf
\end_layout

\begin_deeper
\begin_layout Itemize
set logging levels for METplus and MET output
\end_layout

\begin_layout Itemize
turn on/off logging to stdout (screen) or log files
\end_layout

\end_deeper
\begin_layout Itemize
metplus_runtime.conf
\end_layout

\begin_deeper
\begin_layout Itemize
runtime-related settings:
\end_layout

\begin_deeper
\begin_layout Itemize
location of METplus master_metplus.conf file (the 'master' conf file that
 is a collection of all the final METplus configuration files)
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
metplus_system.conf
\end_layout

\begin_deeper
\begin_layout Itemize
system-related settings:
\end_layout

\begin_deeper
\begin_layout Itemize
location of METplus source code
\end_layout

\begin_layout Itemize
location of MET source and build
\end_layout

\begin_layout Itemize
location of other non-MET executables/binaries
\end_layout

\begin_layout Itemize
location of METplus parm directory
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
They must be fully defined by replacing all variables with 
\shape italic
/path/to's 
\shape default
with valid path names, or have those variables defined in a down-stream
 config file.
 If configuring METplus in a common location for multiple users, it is recommend
ed that the these four configuration files are fully defined.
 Individual users have the option to make customizations by over-riding
 any of these values in their own configuration files.
\end_layout

\begin_layout Section
Running METplus
\end_layout

\begin_layout Standard
Running METplus involves invoking the Python script master_metplus.py from
 any directory followed by a list of configuration files (file path relative
 to the 
\shape italic
path_to_METplus_install_dir
\shape default
/METplus/parm directory).
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Example: Using a 
\begin_inset Quotes eld
\end_inset

default
\begin_inset Quotes erd
\end_inset

configuration
\end_layout

\begin_layout Plain Layout
create your own config file and under the [config] header/family section,
 add the following:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

//This is a comment, comments are defined with a // at the beginning of
 the line.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

// Setting the PROCESS_LIST to Usage indicates that we want usage information
\end_layout

\begin_layout Plain Layout

[config] PROCESS_LIST = Usage
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

// Set the MET_INSTALL_DIR to any real directory.
  We just need to override the /path/to placeholder set in the
\end_layout

\begin_layout Plain Layout

// metplus_system.conf file
\end_layout

\begin_layout Plain Layout

[dir] MET_INSTALL_DIR = /home/minnawin/latest/METplus 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

// Set these to any valid directory to override the /path/to placeholder
 set in the 
\end_layout

\begin_layout Plain Layout

TMP_DIR = /tmp 
\end_layout

\begin_layout Plain Layout

PROJ_DIR = /tmp 
\end_layout

\begin_layout Plain Layout

OUTPUT_BASE = /tmp 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
>master_metplus.py -c ./my_user_config.conf
\end_layout

\begin_layout Plain Layout
or
\end_layout

\begin_layout Plain Layout
>master_metplus.py -c /username/my_user_config.conf
\end_layout

\begin_layout Plain Layout
if you saved your default config in a directory other than where you are
 running master_metplus.py
\end_layout

\begin_layout Plain Layout
A usage message appears, indicating that other config files are required
 to perform useful tasks and a list of currently supported wrappers:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

USAGE:   This is a default process, please indicate more  specific processes
 in the PROCESS_LIST variable in one or more of the following configuration
 files:  
\end_layout

\begin_layout Plain Layout

-parm/metplus_config/metplus_runtime.conf  
\end_layout

\begin_layout Plain Layout

-parm/metplus_use_cases/<usecase_name>/<usecase_name>.conf  
\end_layout

\begin_layout Plain Layout

-parm/metplus_use_cases/<usecase_name>/examples/<example_name>.conf 
\end_layout

\begin_layout Plain Layout

Currently available processes are:    
\end_layout

\begin_layout Plain Layout

- TcPairs   
\end_layout

\begin_layout Plain Layout

- ExtractTiles   
\end_layout

\begin_layout Plain Layout

- SeriesByInit   
\end_layout

\begin_layout Plain Layout

- SeriesByLead   
\end_layout

\begin_layout Plain Layout

- PcpCombine   
\end_layout

\begin_layout Plain Layout

- RegridDataPlane  
\end_layout

\begin_layout Plain Layout

- GridStat   
\end_layout

\begin_layout Plain Layout

- Mode   
\end_layout

\begin_layout Plain Layout

- MTD   
\end_layout

\begin_layout Plain Layout

- RegridDataPlane  
\end_layout

\begin_layout Plain Layout

- CyclonePlotter   
\end_layout

\begin_layout Plain Layout

- TCMPRPlotter   
\end_layout

\begin_layout Plain Layout

- PB2NC   
\end_layout

\begin_layout Plain Layout

- PointStat
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Example: Using a use-case configuration
\end_layout

\begin_layout Plain Layout
>master_metplus.py -c use_cases/feature_relative/feature_relative.conf 
\backslash

\end_layout

\begin_layout Plain Layout
Runs METplus using the defaults set in the three config files found in parm/metp
lus_config.
 Any variables defined in these three config files can be over-ridden in
 the parm/use_cases/feature_relative/feature_relative.conf file.
 METplus will run using the values specified in the feature_relative.conf
 file.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Example: Using example configuration to perform specific evaluation (e.g.
 Model 1 vs.
 Obs1, Model 1 vs Obs 2, Model 2 vs.
 Obs 1, etc.)
\end_layout

\begin_layout Plain Layout
>master_metplus.py -c use_cases/feature_relative/feature_relative.conf 
\backslash

\end_layout

\begin_layout Plain Layout
-c use_cases/feature_relative/example/series_by_lead_all_fhrs.conf
\end_layout

\begin_layout Plain Layout
This runs METplus using the defaults set in the three config files found
 in parm/metplus_config, where variables can be over-ridden by parm/use_cases/fe
ature_relative/feature_relative.conf or in parm/use_cases/feature_relative/exampl
e/series_by_lead_all_fhrs.conf.
 The order in which conf files are called is important.
 Variables that are defined in intermediate conf files will be over-ridden
 by the same variables set in the conf file following it, or the last conf
 file.
\end_layout

\end_inset


\end_layout

\end_body
\end_document
