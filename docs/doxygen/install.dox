/** @page install-repo Installing METplus from the Repository

This page explains how to install METplus from the github repository
housed here:

A user account is not required to access the METplus repository, unless
you are interested in making modifications and contributions to the code.

The repository is located at:
  + <a href="http://github.com/NCAR/METplus" target="_blank">METplus GitHub Developer Page</a>


@section install-prereq Prerequisites

@subsection install-languages Prerequisites: Scripting Languages

You may need to install some additional software.  If you have Linux, MacOS
or open-source BSD distribution, these are likely already installed,
or can be installed via your OS installation command (apt-get, yum,
etc.)

 Language | Why              | Command | To obtain
--------- | ---------------- | ------- | -----------------------------------------------------
POSIX sh  | Job setup        | /bin/sh | Always present on POSIX-compliant operating systems.
Python 2.7  | Workflow         | python  | https://www.python.org/downloads/release/python-2710/
GNU make  | Build system (for documentation)     | gmake   | http://www.gnu.org/software/make/
MET       | For MET applications                |         | https://dtcenter.org/met/users
R 3.25    | If using MET plot_tcmpr.R | | included in MET download (see above)


Note that Python must be version 2.x, and at least version 2.7.
Python 3 is a completely different language than Python 2, and the
METplus scripts are all Python 2 scripts.  You can determine your version of
Python using this command:

    python --version

If your version of Python is 3, you may also have a "python2"
program:

    python2 --version

If your "python" command is version 3, and python2 is version 2, you
can still run METplus.  However, you will need to edit the *.py files in
ush/, scripts/ and rocoto/, and change:

    #! /bin/env python

to:

    #! /bin/env python2

@subsection install-workflow Prerequisites: Workflow Automation Programs

Currently, large-scale METplus verification has not been set up or tested.
When METplus supports large-scale tasks, it will first support Rocoto, then
eventually ecFlow.

 What      | Why                   | Command       | To obtain
---------- | --------------------- | ------------- | -------------------------------------------------------
Rocoto     | Workflow Automation   | rocoto        | https://github.com/christopherwharrop/rocoto/releases
ecFlow     | Alternative to Rocoto | ecflow-client | https://software.ecmwf.int/wiki/display/ECFLOW/Releases



------------------------------------------------------------------------
@section checkout-repo Step 1: METplus Repository Checkout

The first step is to check out METplus from the repository, this can be done
by downloading the source code and sample data from the latest release, cloning
the repository from the command line, or downloading the source code from the
GitHub web page.

- Downloading the latest release (sample data available and tutorial instructions included):
    - in your web browser, go to https://www.github.com/NCAR/METplus
    - click on the 'releases' link near the top of the page, just above the
      solid blue line
      + to get the latest release, click on the green box and text: 'Latest release'
      + or scroll down to the release of interest and click on the bold blue title
        of the release
        - under the 'Downloads' section, click on the items you wish to download, options are:
          + tutorial documentation (how to set up and run specific use cases)
          + sample data
          + source code as zip or compressed tarball
@image latex github_menu_bar_release.eps "GitHub Menu bar"

- Cloning/downloading from the GitHub web page:
    + enter https://github.com/NCAR/METplus in your web browser
    + click on the 'Clone or download' button, located in the upper right-hand
      corner of the page
      + it is a green box with white text 'Clone or download'
      + a box appears, click on the blue 'Download ZIP' button
      + save the code to an appropriate directory (i.e. where you
        wish to store the zip'd source code.
      + unzip the source code using the following command:
          + unzip METplus-master.zip
          + this creates a METplus-master directory, rather than a METplus
            directory.  You can rename your METplus-master directory to METplus
            if you wish.  GitHub appends the '-master' to explicitly mark that
            you have the 'master' branch.

- Cloning the repository from the command line:
    - in the directory from where you wish to save the METplus code,
      enter the following:

      git clone https://github.com/NCAR/METplus

    - You should now have a METplus directory.
    - By default, you will clone the master branch, which is the desired action
    - This does not include any sample data

For more information about the NCAR/METplus GitHub repository (ie cloning branches or workflow for
developers, please refer to the GitHub wiki:

    https://github.com/NCAR/METplus/wiki/GitHub-Repo-Information


@subsection configure-run Step 1.2: Now Configure and Run 

   + @ref mainpage-conf-run


*/
