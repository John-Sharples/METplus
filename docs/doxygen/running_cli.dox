/** @page running_cli Running METplus From the Command-line


This page explains how to run METplus from the command line
Modify the configuration files following the instructions found here:
+ @subpage confguide

Set the appropriate environment variables in your .cshrc (or .bashrc):

    Set your PYTHONPATH, PATH, and (optional) JLOGFILE environment variables
    in the appropriate file based on your working shell.

    Example:
    .cshrc (for C shell)
    open your .cshrc file and do the following:
    setenv PYTHONPATH /home/username/METplus/ush:/home/username/METplus/parm:$PYTHONPATH
    set path = (other_path_entries /home/username/METplus/ush)

    <em>*</em>OPTIONAL, set to where you wish to save the JLOGFILE
    setenv JLOGFILE /path/to/


    .bashrc (for bash shell):
    export PATH=/home/username/METplus/ush:$PATH
    export PYTHONPATH="/home/username/METplus/ush
    <em>*</em>OPTIONAL, set to where you wish to save the JLOGFILE
    export JLOGFILE=/path/to


Determine what use case you wish to run (currently there are four choices):
- Track and Intensity
    + Generate plots for MET-TC components
    + Calls the Python wrapper to TC-Pairs and the Python wrapper to plot_tcmpr.R
    + To run the generic use case, at the command line, run:

        master_metplus.py -c use_cases/track_and_intensity/track_and_intensity.conf

        Note:  METplus automatically searches the parm/met_config directory for
        the corresponding MET config file and the parm/metplus_config directory
        for the required metplus_data.conf, metplus_system.conf, and
        metplus_runtime.conf files, and the parm/ subdirectory for any other/
        additional parameter files.  The settings in the track_and_intensity.conf
        file will over-ride any settings in the metplus_<xyz>.conf files.
    + To run the example, at the command line, run:

        master_metplus.py -c use_cases/track_and_intensity/track_and_intensity.conf -c use_cases/track_and_intensity/examples/tcmpr_mean_median.conf

- Cyclone Plotter
    + Replicate cyclone plots like the "NCEP Tropical and Extratropical Cylone Tracks and Verification" web page (http://www.emc.ncep.noaa.gov/mmb/gplou/emchurr/glblgen/).
    + Calls the Python wrapper to tc_pairs to generate the cyclone track data.
    + To run the cyclone plotter use case, at the command line, run:

        master_metplus.py -c use_cases/cyclone_plotter/cyclone_plotter.conf

- Feature Relative (perform series analysis by init time or by valid time and generate plots)
    + Perform series analysis by init time or by valid time and generate plots.
    + Calls the Python wrapper for TC-Pairs, TC-Stat, and Series-Analysis.
    + Series analysis by forecast time can be performed in one of two ways:
        *by forecast hour groupings, ie. Day1 =0-18, Day2 = 24-42, Day3= 48-60
        *by range: ie. for all of the forecast hours in the time range of interest
    + To run the feature relative generic use case, at the command line run:

        master_metplus.py -c use_cases/feature_relative/feature_relative.conf
    + To run any of the specific example use cases, at the command line, run:

        master_metplus.py -c use_cases/feature_relative/feature_relative.conf -c use_cases/feature_relative/examples/<xyz>.conf

        where <xyz>.conf is any one of the following:
                *series_by_init_12-4_to_12-16.conf
                *series_by_lead_all_fhrs.conf
                *series_by_lead_by_fhr_grouping.conf

                Note:  The settings specified in these example use cases
                over-ride any corresponding setting in the metplus_data.conf,
                metplus_system.conf, and metplus_runtime.conf files.

- QPF
    + Precipitation analysis
    + Calls the Python wrappers to Pcp-Combine, Grid-Stat, MODE, and Grid-Stat tools
    + To run the RUC vs S2 use case, at the command line, run the following:

        master_metplus.py -c use_cases/qpf/qpf.conf -c use_cases/qpf/examples/ruc-vs-s2grib.conf
    + To run any of the use cases in the qpf/examples directory, run the
     following at the command line:

         master_metplus.py -c use_cases/qpf/qpf.conf -c /use_cases/qpf/examples/<specific_example>.conf

         where specific_example can be any one of the following:
         * hrefmean-vs-mrms-qpe.conf
         * hrefmean-vs-qpe.conf
         * hrefmean-vs-s4gempak.conf
         * nationalblend-vs-mrms-qpe.conf
         * phpt-vs-mrms-qpe.conf
         * phpt-vs-s4grib.conf
         * ruc-vs-s2grib.conf

        Note:  The qpf/qpf.conf config file contains settings that are common
        to all the use cases in the qpf subdirectory.  The settings in
        parm/use_cases/qpf/examples/<xyz>.conf over-ride the corresponding
        settings in the qpf.conf file.

When creating your own use case, create a directory under the parm/use_cases
directory and name your use case configuration file the same name as your
use case directory (and add the .conf extension).  For more specific/customized
use case configuration files, create a subdirectory and store your
configuration files there.

*/
